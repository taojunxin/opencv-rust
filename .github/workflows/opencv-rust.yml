name: opencv-rust
on:
  push:
    branches:
      - "*"
    tags_ignore:
      - "*"
  pull_request:
    branches:
      - "*"
jobs:
#  opencv-src:
#    strategy:
#      fail-fast: false
#      matrix:
#        os:
#          - image: ubuntu-18.04
#            family: linux
#          - image: macos-10.15
#            family: osx
#          - image: windows-2019
#            family: windows
#        rust:
#          - stable
#          - beta
#        version:
#          - opencv: 3.4.9
#            vcpkg: 3
#            features: opencv-34
#          - opencv: 4.2.0
#            vcpkg: 4
#            features: opencv-4
#    runs-on: ${{ matrix.os.image }}
#    env:
#      OS_FAMILY: ${{ matrix.os.family }}
#      RUST_TOOLCHAIN: ${{ matrix.rust }}
#      Atlas_ROOT_DIR: /usr/include/ # for cmake to find lapacke.h
#      OPENCV_VERSION: ${{ matrix.version.opencv }}
#      VCPKG_OPENCV_VERSION: ${{ matrix.version.vcpkg }}
#      CARGO_FEATURES: ${{ matrix.version.features }}
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Cache dependencies
#        uses: actions/cache@v1
#        with:
#          path: ~/build
#          key: ${{ runner.os }}-${{ matrix.version.opencv }}-build
#
#      - name: Install dependencies
#        run: ci/install.sh
#        shell: bash
#
#      - name: Install Rust
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: ${{ matrix.rust }}
#          default: true
#
#      - name: Test project
#        run: ci/script.sh
#        shell: bash
#
#      - name: Upload bindings if test failed
#        uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: generated-failed-bindings-${{ runner.os }}-${{ matrix.version.opencv }}
#          path: target
#
#  opencv-bin:
#    strategy:
#      fail-fast: false
#      matrix:
#        os:
#          - image: macos-10.15
#            family: osx
#          - image: windows-2019
#            family: windows
#        rust:
#          - stable
#          - beta
#        version:
#          - choco: 3.4.8
#            brew: "@3"
#            features: opencv-34
#          - choco: 4.1.2
#            brew:
#            features: opencv-4
#    runs-on: ${{ matrix.os.image }}
#    env:
#      OS_FAMILY: ${{ matrix.os.family }}
#      RUST_TOOLCHAIN: ${{ matrix.rust }}
#      CHOCO_OPENCV_VERSION: ${{ matrix.version.choco }}
#      BREW_OPENCV_VERSION: ${{ matrix.version.brew }}
#      CARGO_FEATURES: ${{ matrix.version.features }}
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Install dependencies
#        run: ci/install.sh
#        shell: bash
#
#      - name: Install Rust
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: ${{ matrix.rust }}
#          default: true
#
#      - name: Test project
#        run: ci/script.sh
#        shell: bash
#
#      - name: Upload bindings if test failed
#        uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: generated-failed-bindings-${{ runner.os }}-${{ matrix.version.opencv }}
#          path: target
#
#  linux-opencv-32:
#    runs-on: ubuntu-18.04
#    env:
#      OS_FAMILY: linux
#      RUST_TOOLCHAIN: stable
#      OPENCV_VERSION: 3.2.0
#      CARGO_FEATURES: opencv-32
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Install dependencies
#        run: ci/install.sh
#        shell: bash
#
#      - name: Install Rust
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: stable
#          default: true
#
#      - name: Test project
#        run: ci/script.sh
#        shell: bash
#
#      - name: Upload bindings if test failed
#        uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: generated-failed-bindings-${{ runner.os }}-${{ matrix.version.opencv }}
#          path: target
#
  macos-framework:
    runs-on: macos-10.15
    env:
      OPENCV_VERSION: 4.2.0
      CARGO_FEATURES: opencv-4
      OS_FAMILY: osx
      RUST_TOOLCHAIN: stable
    steps:
      - uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/build
          key: ${{ runner.os }}-${{ matrix.version.opencv }}-build

      - name: Install dependencies
        run: ci/install.sh
        shell: bash

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true

      - name: Test project
        run: ci/script.sh
        shell: bash

      - name: Upload bindings if test failed
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: generated-failed-bindings-${{ runner.os }}-${{ matrix.version.opencv }}
          path: $HOME/build/opencv/opencv-4.2.0-build
